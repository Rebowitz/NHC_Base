/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.nhcsys.dataaccess.j2ee.session;

import com.nhcsys.dataaccess.factory.*;
import com.nhcsys.dataaccess.dao.*;
import com.nhcsys.dataaccess.dto.*;
import com.nhcsys.dataaccess.exceptions.*;
import java.rmi.RemoteException;
import java.math.*;
import java.util.Date;
import javax.ejb.*;

public interface InstalledSoftwareSession extends EJBObject
{
	/** 
	 * Inserts a new row in the INSTALLED_SOFTWARE table.
	 */
	public InstalledSoftwarePk insert(InstalledSoftware dto) throws InstalledSoftwareDaoException, RemoteException;

	/** 
	 * Updates a single row in the INSTALLED_SOFTWARE table.
	 */
	public void update(InstalledSoftwarePk pk, InstalledSoftware dto) throws InstalledSoftwareDaoException, RemoteException;

	/** 
	 * Deletes a single row in the INSTALLED_SOFTWARE table.
	 */
	public void delete(InstalledSoftwarePk pk) throws InstalledSoftwareDaoException, RemoteException;

	/** 
	 * Returns the rows from the INSTALLED_SOFTWARE table that matches the specified primary-key value.
	 */
	public InstalledSoftware findByPrimaryKey(InstalledSoftwarePk pk) throws InstalledSoftwareDaoException, RemoteException;

	/**
	 * Method 'findByPrimaryKey'
	 * 
	 * @param softwareId
	 * @throws InstalledSoftwareDaoException
	 * @throws RemoteException
	 * @return InstalledSoftware
	 */
	public InstalledSoftware findByPrimaryKey(long softwareId) throws InstalledSoftwareDaoException, RemoteException;

	/**
	 * Method 'findWhereSessionIdEquals'
	 * 
	 * @param sessionId
	 * @throws InstalledSoftwareDaoException
	 * @throws RemoteException
	 * @return InstalledSoftware[]
	 */
	public InstalledSoftware[] findWhereSessionIdEquals(String sessionId) throws InstalledSoftwareDaoException, RemoteException;

	/**
	 * Method 'findAll'
	 * 
	 * @throws InstalledSoftwareDaoException
	 * @throws RemoteException
	 * @return InstalledSoftware[]
	 */
	public InstalledSoftware[] findAll() throws InstalledSoftwareDaoException, RemoteException;

	/**
	 * Method 'findWhereSoftwareIdEquals'
	 * 
	 * @param softwareId
	 * @throws InstalledSoftwareDaoException
	 * @throws RemoteException
	 * @return InstalledSoftware[]
	 */
	public InstalledSoftware[] findWhereSoftwareIdEquals(long softwareId) throws InstalledSoftwareDaoException, RemoteException;

	/**
	 * Method 'findWhereCustomerIdEquals'
	 * 
	 * @param customerId
	 * @throws InstalledSoftwareDaoException
	 * @throws RemoteException
	 * @return InstalledSoftware[]
	 */
	public InstalledSoftware[] findWhereCustomerIdEquals(long customerId) throws InstalledSoftwareDaoException, RemoteException;

	/**
	 * Method 'findWhereMachineIdEquals'
	 * 
	 * @param machineId
	 * @throws InstalledSoftwareDaoException
	 * @throws RemoteException
	 * @return InstalledSoftware[]
	 */
	public InstalledSoftware[] findWhereMachineIdEquals(long machineId) throws InstalledSoftwareDaoException, RemoteException;

	/**
	 * Method 'findWhereProductKeyEquals'
	 * 
	 * @param productKey
	 * @throws InstalledSoftwareDaoException
	 * @throws RemoteException
	 * @return InstalledSoftware[]
	 */
	public InstalledSoftware[] findWhereProductKeyEquals(String productKey) throws InstalledSoftwareDaoException, RemoteException;

	/**
	 * Method 'findWhereProductNameEquals'
	 * 
	 * @param productName
	 * @throws InstalledSoftwareDaoException
	 * @throws RemoteException
	 * @return InstalledSoftware[]
	 */
	public InstalledSoftware[] findWhereProductNameEquals(String productName) throws InstalledSoftwareDaoException, RemoteException;

	/**
	 * Method 'findWhereCompanyNameEquals'
	 * 
	 * @param companyName
	 * @throws InstalledSoftwareDaoException
	 * @throws RemoteException
	 * @return InstalledSoftware[]
	 */
	public InstalledSoftware[] findWhereCompanyNameEquals(String companyName) throws InstalledSoftwareDaoException, RemoteException;

	/**
	 * Method 'findWhereProductVersionEquals'
	 * 
	 * @param productVersion
	 * @throws InstalledSoftwareDaoException
	 * @throws RemoteException
	 * @return InstalledSoftware[]
	 */
	public InstalledSoftware[] findWhereProductVersionEquals(String productVersion) throws InstalledSoftwareDaoException, RemoteException;

	/**
	 * Method 'findByDynamicSelect'
	 * 
	 * @param sql
	 * @param arg
	 * @throws InstalledSoftwareDaoException
	 * @throws RemoteException
	 * @return InstalledSoftware[]
	 */
	public InstalledSoftware[] findByDynamicSelect(String sql, Object[] arg) throws InstalledSoftwareDaoException, RemoteException;

	/**
	 * Method 'findByDynamicWhere'
	 * 
	 * @param sql
	 * @param arg
	 * @throws InstalledSoftwareDaoException
	 * @throws RemoteException
	 * @return InstalledSoftware[]
	 */
	public InstalledSoftware[] findByDynamicWhere(String sql, Object[] arg) throws InstalledSoftwareDaoException, RemoteException;

}
