/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.nhcsys.dataaccess.dao;

import com.nhcsys.dataaccess.dto.*;
import com.nhcsys.dataaccess.exceptions.*;

public interface UpdateStatusDao
{
	/** 
	 * Inserts a new row in the UPDATE_STATUS table.
	 */
	public UpdateStatusPk insert(UpdateStatus dto) throws UpdateStatusDaoException;

	/** 
	 * Updates a single row in the UPDATE_STATUS table.
	 */
	public void update(UpdateStatusPk pk, UpdateStatus dto) throws UpdateStatusDaoException;

	/** 
	 * Deletes a single row in the UPDATE_STATUS table.
	 */
	public void delete(UpdateStatusPk pk) throws UpdateStatusDaoException;

	/** 
	 * Returns the rows from the UPDATE_STATUS table that matches the specified primary-key value.
	 */
	public UpdateStatus findByPrimaryKey(UpdateStatusPk pk) throws UpdateStatusDaoException;

	/** 
	 * Returns all rows from the UPDATE_STATUS table that match the criteria 'UPDATE_STATUS_ID = :updateStatusId'.
	 */
	public UpdateStatus findByPrimaryKey(long updateStatusId) throws UpdateStatusDaoException;

	/** 
	 * Returns all rows from the UPDATE_STATUS table that match the criteria ''.
	 */
	public UpdateStatus[] findAll() throws UpdateStatusDaoException;

	/** 
	 * Returns all rows from the UPDATE_STATUS table that match the criteria 'UPDATE_STATUS_ID = :updateStatusId'.
	 */
	public UpdateStatus[] findWhereUpdateStatusIdEquals(long updateStatusId) throws UpdateStatusDaoException;

	/** 
	 * Returns all rows from the UPDATE_STATUS table that match the criteria 'SESSION_ID = :sessionId'.
	 */
	public UpdateStatus[] findWhereSessionIdEquals(String sessionId) throws UpdateStatusDaoException;

	/** 
	 * Returns all rows from the UPDATE_STATUS table that match the criteria 'MACHINE_ID = :machineId'.
	 */
	public UpdateStatus[] findWhereMachineIdEquals(long machineId) throws UpdateStatusDaoException;

	/** 
	 * Returns all rows from the UPDATE_STATUS table that match the criteria 'PRODUCT_ID = :productId'.
	 */
	public UpdateStatus[] findWhereProductIdEquals(String productId) throws UpdateStatusDaoException;

	/** 
	 * Returns all rows from the UPDATE_STATUS table that match the criteria 'DESCRIPTION = :description'.
	 */
	public UpdateStatus[] findWhereDescriptionEquals(String description) throws UpdateStatusDaoException;

	/** 
	 * Returns all rows from the UPDATE_STATUS table that match the criteria 'REPORT = :report'.
	 */
	public UpdateStatus[] findWhereReportEquals(String report) throws UpdateStatusDaoException;

	/** 
	 * Returns all rows from the UPDATE_STATUS table that match the criteria 'STATUS = :status'.
	 */
	public UpdateStatus[] findWhereStatusEquals(String status) throws UpdateStatusDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the UPDATE_STATUS table that match the specified arbitrary SQL statement
	 */
	public UpdateStatus[] findByDynamicSelect(String sql, Object[] sqlParams) throws UpdateStatusDaoException;

	/** 
	 * Returns all rows from the UPDATE_STATUS table that match the specified arbitrary SQL statement
	 */
	public UpdateStatus[] findByDynamicWhere(String sql, Object[] sqlParams) throws UpdateStatusDaoException;

}
