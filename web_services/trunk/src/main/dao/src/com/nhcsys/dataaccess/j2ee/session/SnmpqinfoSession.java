/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.nhcsys.dataaccess.j2ee.session;

import com.nhcsys.dataaccess.factory.*;
import com.nhcsys.dataaccess.dao.*;
import com.nhcsys.dataaccess.dto.*;
import com.nhcsys.dataaccess.exceptions.*;
import java.rmi.RemoteException;
import java.math.*;
import java.util.Date;
import javax.ejb.*;

public interface SnmpqinfoSession extends EJBObject
{
	/** 
	 * Inserts a new row in the SNMPQINFO table.
	 */
	public SnmpqinfoPk insert(Snmpqinfo dto) throws SnmpqinfoDaoException, RemoteException;

	/** 
	 * Updates a single row in the SNMPQINFO table.
	 */
	public void update(SnmpqinfoPk pk, Snmpqinfo dto) throws SnmpqinfoDaoException, RemoteException;

	/** 
	 * Deletes a single row in the SNMPQINFO table.
	 */
	public void delete(SnmpqinfoPk pk) throws SnmpqinfoDaoException, RemoteException;

	/** 
	 * Returns the rows from the SNMPQINFO table that matches the specified primary-key value.
	 */
	public Snmpqinfo findByPrimaryKey(SnmpqinfoPk pk) throws SnmpqinfoDaoException, RemoteException;

	/**
	 * Method 'findByPrimaryKey'
	 * 
	 * @param snmpqinfoId
	 * @throws SnmpqinfoDaoException
	 * @throws RemoteException
	 * @return Snmpqinfo
	 */
	public Snmpqinfo findByPrimaryKey(long snmpqinfoId) throws SnmpqinfoDaoException, RemoteException;

	/**
	 * Method 'findAll'
	 * 
	 * @throws SnmpqinfoDaoException
	 * @throws RemoteException
	 * @return Snmpqinfo[]
	 */
	public Snmpqinfo[] findAll() throws SnmpqinfoDaoException, RemoteException;

	/**
	 * Method 'findWhereSnmpqinfoIdEquals'
	 * 
	 * @param snmpqinfoId
	 * @throws SnmpqinfoDaoException
	 * @throws RemoteException
	 * @return Snmpqinfo[]
	 */
	public Snmpqinfo[] findWhereSnmpqinfoIdEquals(long snmpqinfoId) throws SnmpqinfoDaoException, RemoteException;

	/**
	 * Method 'findWhereNetworkinfoIdEquals'
	 * 
	 * @param networkinfoId
	 * @throws SnmpqinfoDaoException
	 * @throws RemoteException
	 * @return Snmpqinfo[]
	 */
	public Snmpqinfo[] findWhereNetworkinfoIdEquals(long networkinfoId) throws SnmpqinfoDaoException, RemoteException;

	/**
	 * Method 'findWhereNameEquals'
	 * 
	 * @param name
	 * @throws SnmpqinfoDaoException
	 * @throws RemoteException
	 * @return Snmpqinfo[]
	 */
	public Snmpqinfo[] findWhereNameEquals(String name) throws SnmpqinfoDaoException, RemoteException;

	/**
	 * Method 'findWhereTreeEquals'
	 * 
	 * @param tree
	 * @throws SnmpqinfoDaoException
	 * @throws RemoteException
	 * @return Snmpqinfo[]
	 */
	public Snmpqinfo[] findWhereTreeEquals(String tree) throws SnmpqinfoDaoException, RemoteException;

	/**
	 * Method 'findByDynamicSelect'
	 * 
	 * @param sql
	 * @param arg
	 * @throws SnmpqinfoDaoException
	 * @throws RemoteException
	 * @return Snmpqinfo[]
	 */
	public Snmpqinfo[] findByDynamicSelect(String sql, Object[] arg) throws SnmpqinfoDaoException, RemoteException;

	/**
	 * Method 'findByDynamicWhere'
	 * 
	 * @param sql
	 * @param arg
	 * @throws SnmpqinfoDaoException
	 * @throws RemoteException
	 * @return Snmpqinfo[]
	 */
	public Snmpqinfo[] findByDynamicWhere(String sql, Object[] arg) throws SnmpqinfoDaoException, RemoteException;

}
