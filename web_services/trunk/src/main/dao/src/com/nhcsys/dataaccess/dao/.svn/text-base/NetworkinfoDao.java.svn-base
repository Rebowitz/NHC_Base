/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.nhcsys.dataaccess.dao;

import java.util.Date;
import com.nhcsys.dataaccess.dto.*;
import com.nhcsys.dataaccess.exceptions.*;

public interface NetworkinfoDao
{
	/** 
	 * Inserts a new row in the NETWORKINFO table.
	 */
	public NetworkinfoPk insert(Networkinfo dto) throws NetworkinfoDaoException;

	/** 
	 * Updates a single row in the NETWORKINFO table.
	 */
	public void update(NetworkinfoPk pk, Networkinfo dto) throws NetworkinfoDaoException;

	/** 
	 * Deletes a single row in the NETWORKINFO table.
	 */
	public void delete(NetworkinfoPk pk) throws NetworkinfoDaoException;

	/** 
	 * Returns the rows from the NETWORKINFO table that matches the specified primary-key value.
	 */
	public Networkinfo findByPrimaryKey(NetworkinfoPk pk) throws NetworkinfoDaoException;

	/** 
	 * Returns all rows from the NETWORKINFO table that match the criteria 'NETWORKINFO_ID = :networkinfoId'.
	 */
	public Networkinfo findByPrimaryKey(long networkinfoId) throws NetworkinfoDaoException;

	/** 
	 * Returns all rows from the NETWORKINFO table that match the criteria ''.
	 */
	public Networkinfo[] findAll() throws NetworkinfoDaoException;

	/** 
	 * Returns all rows from the NETWORKINFO table that match the criteria 'NETWORKINFO_ID = :networkinfoId'.
	 */
	public Networkinfo[] findWhereNetworkinfoIdEquals(long networkinfoId) throws NetworkinfoDaoException;

	/** 
	 * Returns all rows from the NETWORKINFO table that match the criteria 'CUSTOMER_ID = :customerId'.
	 */
	public Networkinfo[] findWhereCustomerIdEquals(long customerId) throws NetworkinfoDaoException;

	/** 
	 * Returns all rows from the NETWORKINFO table that match the criteria 'MACHINE_ID = :machineId'.
	 */
	public Networkinfo[] findWhereMachineIdEquals(long machineId) throws NetworkinfoDaoException;

	/** 
	 * Returns all rows from the NETWORKINFO table that match the criteria 'SSID = :ssid'.
	 */
	public Networkinfo[] findWhereSsidEquals(String ssid) throws NetworkinfoDaoException;

	/** 
	 * Returns all rows from the NETWORKINFO table that match the criteria 'PASSPHRASE = :passphrase'.
	 */
	public Networkinfo[] findWherePassphraseEquals(String passphrase) throws NetworkinfoDaoException;

	/** 
	 * Returns all rows from the NETWORKINFO table that match the criteria 'WIRELESSINFOTYPE = :wirelessinfotype'.
	 */
	public Networkinfo[] findWhereWirelessinfotypeEquals(String wirelessinfotype) throws NetworkinfoDaoException;

	/** 
	 * Returns all rows from the NETWORKINFO table that match the criteria 'TIMESTAMP = :timestamp'.
	 */
	public Networkinfo[] findWhereTimestampEquals(Date timestamp) throws NetworkinfoDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the NETWORKINFO table that match the specified arbitrary SQL statement
	 */
	public Networkinfo[] findByDynamicSelect(String sql, Object[] sqlParams) throws NetworkinfoDaoException;

	/** 
	 * Returns all rows from the NETWORKINFO table that match the specified arbitrary SQL statement
	 */
	public Networkinfo[] findByDynamicWhere(String sql, Object[] sqlParams) throws NetworkinfoDaoException;

}
