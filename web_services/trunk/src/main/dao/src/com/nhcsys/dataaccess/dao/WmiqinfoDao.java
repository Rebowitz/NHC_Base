/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.nhcsys.dataaccess.dao;

import com.nhcsys.dataaccess.dto.*;
import com.nhcsys.dataaccess.exceptions.*;

public interface WmiqinfoDao
{
	/** 
	 * Inserts a new row in the WMIQINFO table.
	 */
	public WmiqinfoPk insert(Wmiqinfo dto) throws WmiqinfoDaoException;

	/** 
	 * Updates a single row in the WMIQINFO table.
	 */
	public void update(WmiqinfoPk pk, Wmiqinfo dto) throws WmiqinfoDaoException;

	/** 
	 * Deletes a single row in the WMIQINFO table.
	 */
	public void delete(WmiqinfoPk pk) throws WmiqinfoDaoException;

	/** 
	 * Returns the rows from the WMIQINFO table that matches the specified primary-key value.
	 */
	public Wmiqinfo findByPrimaryKey(WmiqinfoPk pk) throws WmiqinfoDaoException;

	/** 
	 * Returns all rows from the WMIQINFO table that match the criteria 'WMIQINFO_ID = :wmiqinfoId'.
	 */
	public Wmiqinfo findByPrimaryKey(long wmiqinfoId) throws WmiqinfoDaoException;

	/** 
	 * Returns all rows from the WMIQINFO table that match the criteria ''.
	 */
	public Wmiqinfo[] findAll() throws WmiqinfoDaoException;

	/** 
	 * Returns all rows from the WMIQINFO table that match the criteria 'WMIQINFO_ID = :wmiqinfoId'.
	 */
	public Wmiqinfo[] findWhereWmiqinfoIdEquals(long wmiqinfoId) throws WmiqinfoDaoException;

	/** 
	 * Returns all rows from the WMIQINFO table that match the criteria 'NETWORKINFO_ID = :networkinfoId'.
	 */
	public Wmiqinfo[] findWhereNetworkinfoIdEquals(long networkinfoId) throws WmiqinfoDaoException;

	/** 
	 * Returns all rows from the WMIQINFO table that match the criteria 'NAME = :name'.
	 */
	public Wmiqinfo[] findWhereNameEquals(String name) throws WmiqinfoDaoException;

	/** 
	 * Returns all rows from the WMIQINFO table that match the criteria 'QUERY = :query'.
	 */
	public Wmiqinfo[] findWhereQueryEquals(String query) throws WmiqinfoDaoException;

	/** 
	 * Returns all rows from the WMIQINFO table that match the criteria 'RESULT = :result'.
	 */
	public Wmiqinfo[] findWhereResultEquals(String result) throws WmiqinfoDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the WMIQINFO table that match the specified arbitrary SQL statement
	 */
	public Wmiqinfo[] findByDynamicSelect(String sql, Object[] sqlParams) throws WmiqinfoDaoException;

	/** 
	 * Returns all rows from the WMIQINFO table that match the specified arbitrary SQL statement
	 */
	public Wmiqinfo[] findByDynamicWhere(String sql, Object[] sqlParams) throws WmiqinfoDaoException;

}
