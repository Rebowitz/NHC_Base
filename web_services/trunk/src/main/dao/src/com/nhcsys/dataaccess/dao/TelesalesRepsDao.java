/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.nhcsys.dataaccess.dao;

import com.nhcsys.dataaccess.dto.*;
import com.nhcsys.dataaccess.exceptions.*;

public interface TelesalesRepsDao
{
	/** 
	 * Inserts a new row in the TELESALES_REPS table.
	 */
	public TelesalesRepsPk insert(TelesalesReps dto) throws TelesalesRepsDaoException;

	/** 
	 * Updates a single row in the TELESALES_REPS table.
	 */
	public void update(TelesalesRepsPk pk, TelesalesReps dto) throws TelesalesRepsDaoException;

	/** 
	 * Deletes a single row in the TELESALES_REPS table.
	 */
	public void delete(TelesalesRepsPk pk) throws TelesalesRepsDaoException;

	/** 
	 * Returns the rows from the TELESALES_REPS table that matches the specified primary-key value.
	 */
	public TelesalesReps findByPrimaryKey(TelesalesRepsPk pk) throws TelesalesRepsDaoException;

	/** 
	 * Returns all rows from the TELESALES_REPS table that match the criteria 'REP_ID = :repId'.
	 */
	public TelesalesReps findByPrimaryKey(long repId) throws TelesalesRepsDaoException;

	/** 
	 * Returns all rows from the TELESALES_REPS table that match the criteria ''.
	 */
	public TelesalesReps[] findAll() throws TelesalesRepsDaoException;

	/** 
	 * Returns all rows from the TELESALES_REPS table that match the criteria 'ORG_ID = :orgId'.
	 */
	public TelesalesReps[] findByTelesalesOrgs(long orgId) throws TelesalesRepsDaoException;

	/** 
	 * Returns all rows from the TELESALES_REPS table that match the criteria 'REP_ID = :repId'.
	 */
	public TelesalesReps[] findWhereRepIdEquals(long repId) throws TelesalesRepsDaoException;

	/** 
	 * Returns all rows from the TELESALES_REPS table that match the criteria 'ORG_ID = :orgId'.
	 */
	public TelesalesReps[] findWhereOrgIdEquals(long orgId) throws TelesalesRepsDaoException;

	/** 
	 * Returns all rows from the TELESALES_REPS table that match the criteria 'USER_ID = :userId'.
	 */
	public TelesalesReps[] findWhereUserIdEquals(String userId) throws TelesalesRepsDaoException;

	/** 
	 * Returns all rows from the TELESALES_REPS table that match the criteria 'PASSWORD_TEXT = :passwordText'.
	 */
	public TelesalesReps[] findWherePasswordTextEquals(String passwordText) throws TelesalesRepsDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the TELESALES_REPS table that match the specified arbitrary SQL statement
	 */
	public TelesalesReps[] findByDynamicSelect(String sql, Object[] sqlParams) throws TelesalesRepsDaoException;

	/** 
	 * Returns all rows from the TELESALES_REPS table that match the specified arbitrary SQL statement
	 */
	public TelesalesReps[] findByDynamicWhere(String sql, Object[] sqlParams) throws TelesalesRepsDaoException;

}
