/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.nhcsys.dataaccess.dao;

import com.nhcsys.dataaccess.dto.*;
import com.nhcsys.dataaccess.exceptions.*;

public interface SnmpqinfoDao
{
	/** 
	 * Inserts a new row in the SNMPQINFO table.
	 */
	public SnmpqinfoPk insert(Snmpqinfo dto) throws SnmpqinfoDaoException;

	/** 
	 * Updates a single row in the SNMPQINFO table.
	 */
	public void update(SnmpqinfoPk pk, Snmpqinfo dto) throws SnmpqinfoDaoException;

	/** 
	 * Deletes a single row in the SNMPQINFO table.
	 */
	public void delete(SnmpqinfoPk pk) throws SnmpqinfoDaoException;

	/** 
	 * Returns the rows from the SNMPQINFO table that matches the specified primary-key value.
	 */
	public Snmpqinfo findByPrimaryKey(SnmpqinfoPk pk) throws SnmpqinfoDaoException;

	/** 
	 * Returns all rows from the SNMPQINFO table that match the criteria 'SNMPQINFO_ID = :snmpqinfoId'.
	 */
	public Snmpqinfo findByPrimaryKey(long snmpqinfoId) throws SnmpqinfoDaoException;

	/** 
	 * Returns all rows from the SNMPQINFO table that match the criteria ''.
	 */
	public Snmpqinfo[] findAll() throws SnmpqinfoDaoException;

	/** 
	 * Returns all rows from the SNMPQINFO table that match the criteria 'SNMPQINFO_ID = :snmpqinfoId'.
	 */
	public Snmpqinfo[] findWhereSnmpqinfoIdEquals(long snmpqinfoId) throws SnmpqinfoDaoException;

	/** 
	 * Returns all rows from the SNMPQINFO table that match the criteria 'NETWORKINFO_ID = :networkinfoId'.
	 */
	public Snmpqinfo[] findWhereNetworkinfoIdEquals(long networkinfoId) throws SnmpqinfoDaoException;

	/** 
	 * Returns all rows from the SNMPQINFO table that match the criteria 'NAME = :name'.
	 */
	public Snmpqinfo[] findWhereNameEquals(String name) throws SnmpqinfoDaoException;

	/** 
	 * Returns all rows from the SNMPQINFO table that match the criteria 'TREE = :tree'.
	 */
	public Snmpqinfo[] findWhereTreeEquals(String tree) throws SnmpqinfoDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the SNMPQINFO table that match the specified arbitrary SQL statement
	 */
	public Snmpqinfo[] findByDynamicSelect(String sql, Object[] sqlParams) throws SnmpqinfoDaoException;

	/** 
	 * Returns all rows from the SNMPQINFO table that match the specified arbitrary SQL statement
	 */
	public Snmpqinfo[] findByDynamicWhere(String sql, Object[] sqlParams) throws SnmpqinfoDaoException;

}
