/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.nhcsys.dataaccess.j2ee.session;

import com.nhcsys.dataaccess.factory.*;
import com.nhcsys.dataaccess.dao.*;
import com.nhcsys.dataaccess.dto.*;
import com.nhcsys.dataaccess.exceptions.*;
import java.rmi.RemoteException;
import java.math.*;
import java.util.Date;
import javax.ejb.*;

public interface TelesalesRepsSession extends EJBObject
{
	/** 
	 * Inserts a new row in the TELESALES_REPS table.
	 */
	public TelesalesRepsPk insert(TelesalesReps dto) throws TelesalesRepsDaoException, RemoteException;

	/** 
	 * Updates a single row in the TELESALES_REPS table.
	 */
	public void update(TelesalesRepsPk pk, TelesalesReps dto) throws TelesalesRepsDaoException, RemoteException;

	/** 
	 * Deletes a single row in the TELESALES_REPS table.
	 */
	public void delete(TelesalesRepsPk pk) throws TelesalesRepsDaoException, RemoteException;

	/** 
	 * Returns the rows from the TELESALES_REPS table that matches the specified primary-key value.
	 */
	public TelesalesReps findByPrimaryKey(TelesalesRepsPk pk) throws TelesalesRepsDaoException, RemoteException;

	/**
	 * Method 'findByPrimaryKey'
	 * 
	 * @param repId
	 * @throws TelesalesRepsDaoException
	 * @throws RemoteException
	 * @return TelesalesReps
	 */
	public TelesalesReps findByPrimaryKey(long repId) throws TelesalesRepsDaoException, RemoteException;

	/**
	 * Method 'findAll'
	 * 
	 * @throws TelesalesRepsDaoException
	 * @throws RemoteException
	 * @return TelesalesReps[]
	 */
	public TelesalesReps[] findAll() throws TelesalesRepsDaoException, RemoteException;

	/**
	 * Method 'findByTelesalesOrgs'
	 * 
	 * @param orgId
	 * @throws TelesalesRepsDaoException
	 * @throws RemoteException
	 * @return TelesalesReps[]
	 */
	public TelesalesReps[] findByTelesalesOrgs(long orgId) throws TelesalesRepsDaoException, RemoteException;

	/**
	 * Method 'findWhereRepIdEquals'
	 * 
	 * @param repId
	 * @throws TelesalesRepsDaoException
	 * @throws RemoteException
	 * @return TelesalesReps[]
	 */
	public TelesalesReps[] findWhereRepIdEquals(long repId) throws TelesalesRepsDaoException, RemoteException;

	/**
	 * Method 'findWhereOrgIdEquals'
	 * 
	 * @param orgId
	 * @throws TelesalesRepsDaoException
	 * @throws RemoteException
	 * @return TelesalesReps[]
	 */
	public TelesalesReps[] findWhereOrgIdEquals(long orgId) throws TelesalesRepsDaoException, RemoteException;

	/**
	 * Method 'findWhereUserIdEquals'
	 * 
	 * @param userId
	 * @throws TelesalesRepsDaoException
	 * @throws RemoteException
	 * @return TelesalesReps[]
	 */
	public TelesalesReps[] findWhereUserIdEquals(String userId) throws TelesalesRepsDaoException, RemoteException;

	/**
	 * Method 'findWherePasswordTextEquals'
	 * 
	 * @param passwordText
	 * @throws TelesalesRepsDaoException
	 * @throws RemoteException
	 * @return TelesalesReps[]
	 */
	public TelesalesReps[] findWherePasswordTextEquals(String passwordText) throws TelesalesRepsDaoException, RemoteException;

	/**
	 * Method 'findByDynamicSelect'
	 * 
	 * @param sql
	 * @param arg
	 * @throws TelesalesRepsDaoException
	 * @throws RemoteException
	 * @return TelesalesReps[]
	 */
	public TelesalesReps[] findByDynamicSelect(String sql, Object[] arg) throws TelesalesRepsDaoException, RemoteException;

	/**
	 * Method 'findByDynamicWhere'
	 * 
	 * @param sql
	 * @param arg
	 * @throws TelesalesRepsDaoException
	 * @throws RemoteException
	 * @return TelesalesReps[]
	 */
	public TelesalesReps[] findByDynamicWhere(String sql, Object[] arg) throws TelesalesRepsDaoException, RemoteException;

}
