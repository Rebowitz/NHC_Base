/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.nhcsys.dataaccess.j2ee.session;

import com.nhcsys.dataaccess.factory.*;
import com.nhcsys.dataaccess.dao.*;
import com.nhcsys.dataaccess.dto.*;
import com.nhcsys.dataaccess.exceptions.*;
import java.rmi.RemoteException;
import java.math.*;
import java.util.Date;
import javax.ejb.*;

public interface TelesalesOrgsSession extends EJBObject
{
	/** 
	 * Inserts a new row in the TELESALES_ORGS table.
	 */
	public TelesalesOrgsPk insert(TelesalesOrgs dto) throws TelesalesOrgsDaoException, RemoteException;

	/** 
	 * Updates a single row in the TELESALES_ORGS table.
	 */
	public void update(TelesalesOrgsPk pk, TelesalesOrgs dto) throws TelesalesOrgsDaoException, RemoteException;

	/** 
	 * Deletes a single row in the TELESALES_ORGS table.
	 */
	public void delete(TelesalesOrgsPk pk) throws TelesalesOrgsDaoException, RemoteException;

	/** 
	 * Returns the rows from the TELESALES_ORGS table that matches the specified primary-key value.
	 */
	public TelesalesOrgs findByPrimaryKey(TelesalesOrgsPk pk) throws TelesalesOrgsDaoException, RemoteException;

	/**
	 * Method 'findByPrimaryKey'
	 * 
	 * @param orgId
	 * @throws TelesalesOrgsDaoException
	 * @throws RemoteException
	 * @return TelesalesOrgs
	 */
	public TelesalesOrgs findByPrimaryKey(long orgId) throws TelesalesOrgsDaoException, RemoteException;

	/**
	 * Method 'findAll'
	 * 
	 * @throws TelesalesOrgsDaoException
	 * @throws RemoteException
	 * @return TelesalesOrgs[]
	 */
	public TelesalesOrgs[] findAll() throws TelesalesOrgsDaoException, RemoteException;

	/**
	 * Method 'findWhereOrgIdEquals'
	 * 
	 * @param orgId
	 * @throws TelesalesOrgsDaoException
	 * @throws RemoteException
	 * @return TelesalesOrgs[]
	 */
	public TelesalesOrgs[] findWhereOrgIdEquals(long orgId) throws TelesalesOrgsDaoException, RemoteException;

	/**
	 * Method 'findWhereOrgNameEquals'
	 * 
	 * @param orgName
	 * @throws TelesalesOrgsDaoException
	 * @throws RemoteException
	 * @return TelesalesOrgs[]
	 */
	public TelesalesOrgs[] findWhereOrgNameEquals(String orgName) throws TelesalesOrgsDaoException, RemoteException;

	/**
	 * Method 'findWhereConfigValueEquals'
	 * 
	 * @param configValue
	 * @throws TelesalesOrgsDaoException
	 * @throws RemoteException
	 * @return TelesalesOrgs[]
	 */
	public TelesalesOrgs[] findWhereConfigValueEquals(String configValue) throws TelesalesOrgsDaoException, RemoteException;

	/**
	 * Method 'findByDynamicSelect'
	 * 
	 * @param sql
	 * @param arg
	 * @throws TelesalesOrgsDaoException
	 * @throws RemoteException
	 * @return TelesalesOrgs[]
	 */
	public TelesalesOrgs[] findByDynamicSelect(String sql, Object[] arg) throws TelesalesOrgsDaoException, RemoteException;

	/**
	 * Method 'findByDynamicWhere'
	 * 
	 * @param sql
	 * @param arg
	 * @throws TelesalesOrgsDaoException
	 * @throws RemoteException
	 * @return TelesalesOrgs[]
	 */
	public TelesalesOrgs[] findByDynamicWhere(String sql, Object[] arg) throws TelesalesOrgsDaoException, RemoteException;

}
