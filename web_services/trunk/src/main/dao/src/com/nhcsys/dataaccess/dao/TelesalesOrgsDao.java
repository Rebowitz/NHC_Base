/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.nhcsys.dataaccess.dao;

import com.nhcsys.dataaccess.dto.*;
import com.nhcsys.dataaccess.exceptions.*;

public interface TelesalesOrgsDao
{
	/** 
	 * Inserts a new row in the TELESALES_ORGS table.
	 */
	public TelesalesOrgsPk insert(TelesalesOrgs dto) throws TelesalesOrgsDaoException;

	/** 
	 * Updates a single row in the TELESALES_ORGS table.
	 */
	public void update(TelesalesOrgsPk pk, TelesalesOrgs dto) throws TelesalesOrgsDaoException;

	/** 
	 * Deletes a single row in the TELESALES_ORGS table.
	 */
	public void delete(TelesalesOrgsPk pk) throws TelesalesOrgsDaoException;

	/** 
	 * Returns the rows from the TELESALES_ORGS table that matches the specified primary-key value.
	 */
	public TelesalesOrgs findByPrimaryKey(TelesalesOrgsPk pk) throws TelesalesOrgsDaoException;

	/** 
	 * Returns all rows from the TELESALES_ORGS table that match the criteria 'ORG_ID = :orgId'.
	 */
	public TelesalesOrgs findByPrimaryKey(long orgId) throws TelesalesOrgsDaoException;

	/** 
	 * Returns all rows from the TELESALES_ORGS table that match the criteria ''.
	 */
	public TelesalesOrgs[] findAll() throws TelesalesOrgsDaoException;

	/** 
	 * Returns all rows from the TELESALES_ORGS table that match the criteria 'ORG_ID = :orgId'.
	 */
	public TelesalesOrgs[] findWhereOrgIdEquals(long orgId) throws TelesalesOrgsDaoException;

	/** 
	 * Returns all rows from the TELESALES_ORGS table that match the criteria 'ORG_NAME = :orgName'.
	 */
	public TelesalesOrgs[] findWhereOrgNameEquals(String orgName) throws TelesalesOrgsDaoException;

	/** 
	 * Returns all rows from the TELESALES_ORGS table that match the criteria 'CONFIG_VALUE = :configValue'.
	 */
	public TelesalesOrgs[] findWhereConfigValueEquals(String configValue) throws TelesalesOrgsDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the TELESALES_ORGS table that match the specified arbitrary SQL statement
	 */
	public TelesalesOrgs[] findByDynamicSelect(String sql, Object[] sqlParams) throws TelesalesOrgsDaoException;

	/** 
	 * Returns all rows from the TELESALES_ORGS table that match the specified arbitrary SQL statement
	 */
	public TelesalesOrgs[] findByDynamicWhere(String sql, Object[] sqlParams) throws TelesalesOrgsDaoException;

}
