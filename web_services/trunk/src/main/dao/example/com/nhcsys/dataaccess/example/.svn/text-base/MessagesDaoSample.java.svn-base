/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.nhcsys.dataaccess.example;

import java.math.*;
import java.util.Date;
import java.util.Collection;
import com.nhcsys.dataaccess.dao.MessagesDao;
import com.nhcsys.dataaccess.dto.Messages;
import com.nhcsys.dataaccess.exceptions.MessagesDaoException;
import com.nhcsys.dataaccess.factory.MessagesDaoFactory;

public class MessagesDaoSample
{
	/**
	 * Method 'main'
	 * 
	 * @param arg
	 * @throws Exception
	 */
	public static void main(String[] arg) throws Exception
	{
		// Uncomment one of the lines below to test the generated code
		
		// findAll();
		// findWhereMessageIdEquals(0);
		// findWhereTypeEquals("");
		// findWhereStartTimeEquals(null);
		// findWhereEndTimeEquals(null);
		// findWhereModTimeEquals(null);
		// findWhereTitleEquals("");
		// findWhereContentsEquals("");
		// findWhereSummaryEquals("");
		// findWherePriorityEquals("");
		// findWherePopupDurationEquals(0);
		// findWhereClickDestinationUrlEquals("");
		// findWhereDestinationEquals("");
		// findWhereGroupNameEquals("");
		// findWhereViveIdEquals("");
	}

	/**
	 * Method 'findAll'
	 * 
	 */
	public static void findAll()
	{
		try {
			MessagesDao _dao = getMessagesDao();
			Messages _result[] = _dao.findAll();
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereMessageIdEquals'
	 * 
	 * @param messageId
	 */
	public static void findWhereMessageIdEquals(long messageId)
	{
		try {
			MessagesDao _dao = getMessagesDao();
			Messages _result[] = _dao.findWhereMessageIdEquals(messageId);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereTypeEquals'
	 * 
	 * @param type
	 */
	public static void findWhereTypeEquals(String type)
	{
		try {
			MessagesDao _dao = getMessagesDao();
			Messages _result[] = _dao.findWhereTypeEquals(type);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereStartTimeEquals'
	 * 
	 * @param startTime
	 */
	public static void findWhereStartTimeEquals(Date startTime)
	{
		try {
			MessagesDao _dao = getMessagesDao();
			Messages _result[] = _dao.findWhereStartTimeEquals(startTime);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereEndTimeEquals'
	 * 
	 * @param endTime
	 */
	public static void findWhereEndTimeEquals(Date endTime)
	{
		try {
			MessagesDao _dao = getMessagesDao();
			Messages _result[] = _dao.findWhereEndTimeEquals(endTime);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereModTimeEquals'
	 * 
	 * @param modTime
	 */
	public static void findWhereModTimeEquals(Date modTime)
	{
		try {
			MessagesDao _dao = getMessagesDao();
			Messages _result[] = _dao.findWhereModTimeEquals(modTime);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereTitleEquals'
	 * 
	 * @param title
	 */
	public static void findWhereTitleEquals(String title)
	{
		try {
			MessagesDao _dao = getMessagesDao();
			Messages _result[] = _dao.findWhereTitleEquals(title);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereContentsEquals'
	 * 
	 * @param contents
	 */
	public static void findWhereContentsEquals(String contents)
	{
		try {
			MessagesDao _dao = getMessagesDao();
			Messages _result[] = _dao.findWhereContentsEquals(contents);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereSummaryEquals'
	 * 
	 * @param summary
	 */
	public static void findWhereSummaryEquals(String summary)
	{
		try {
			MessagesDao _dao = getMessagesDao();
			Messages _result[] = _dao.findWhereSummaryEquals(summary);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWherePriorityEquals'
	 * 
	 * @param priority
	 */
	public static void findWherePriorityEquals(String priority)
	{
		try {
			MessagesDao _dao = getMessagesDao();
			Messages _result[] = _dao.findWherePriorityEquals(priority);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWherePopupDurationEquals'
	 * 
	 * @param popupDuration
	 */
	public static void findWherePopupDurationEquals(long popupDuration)
	{
		try {
			MessagesDao _dao = getMessagesDao();
			Messages _result[] = _dao.findWherePopupDurationEquals(popupDuration);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereClickDestinationUrlEquals'
	 * 
	 * @param clickDestinationUrl
	 */
	public static void findWhereClickDestinationUrlEquals(String clickDestinationUrl)
	{
		try {
			MessagesDao _dao = getMessagesDao();
			Messages _result[] = _dao.findWhereClickDestinationUrlEquals(clickDestinationUrl);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereDestinationEquals'
	 * 
	 * @param destination
	 */
	public static void findWhereDestinationEquals(String destination)
	{
		try {
			MessagesDao _dao = getMessagesDao();
			Messages _result[] = _dao.findWhereDestinationEquals(destination);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereGroupNameEquals'
	 * 
	 * @param groupName
	 */
	public static void findWhereGroupNameEquals(String groupName)
	{
		try {
			MessagesDao _dao = getMessagesDao();
			Messages _result[] = _dao.findWhereGroupNameEquals(groupName);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereViveIdEquals'
	 * 
	 * @param viveId
	 */
	public static void findWhereViveIdEquals(String viveId)
	{
		try {
			MessagesDao _dao = getMessagesDao();
			Messages _result[] = _dao.findWhereViveIdEquals(viveId);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'getMessagesDao'
	 * 
	 * @return MessagesDao
	 */
	public static MessagesDao getMessagesDao()
	{
		return MessagesDaoFactory.create();
	}

	/**
	 * Method 'display'
	 * 
	 * @param dto
	 */
	public static void display(Messages dto)
	{
		StringBuffer buf = new StringBuffer();
		buf.append( dto.getMessageId() );
		buf.append( ", " );
		buf.append( dto.getType() );
		buf.append( ", " );
		buf.append( dto.getStartTime() );
		buf.append( ", " );
		buf.append( dto.getEndTime() );
		buf.append( ", " );
		buf.append( dto.getModTime() );
		buf.append( ", " );
		buf.append( dto.getTitle() );
		buf.append( ", " );
		buf.append( dto.getContents() );
		buf.append( ", " );
		buf.append( dto.getSummary() );
		buf.append( ", " );
		buf.append( dto.getPriority() );
		buf.append( ", " );
		buf.append( dto.getPopupDuration() );
		buf.append( ", " );
		buf.append( dto.getClickDestinationUrl() );
		buf.append( ", " );
		buf.append( dto.getDestination() );
		buf.append( ", " );
		buf.append( dto.getGroupName() );
		buf.append( ", " );
		buf.append( dto.getViveId() );
		System.out.println( buf.toString() );
	}

}
