/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.nhcsys.dataaccess.example;

import java.math.*;
import java.util.Date;
import java.util.Collection;
import com.nhcsys.dataaccess.dao.MachinesDao;
import com.nhcsys.dataaccess.dto.Machines;
import com.nhcsys.dataaccess.exceptions.MachinesDaoException;
import com.nhcsys.dataaccess.factory.MachinesDaoFactory;

public class MachinesDaoSample
{
	/**
	 * Method 'main'
	 * 
	 * @param arg
	 * @throws Exception
	 */
	public static void main(String[] arg) throws Exception
	{
		// Uncomment one of the lines below to test the generated code
		
		// findAll();
		// findWhereMachineIdEquals(0);
		// findWhereCustomerIdEquals(0);
		// findWhereViveIdEquals("");
		// findWhereCpuSerialNoEquals("");
		// findWhereKeyDataEquals("");
		// findWhereKeyTimestampEquals(0);
		// findWhereStolenFlagEquals(0);
		// findWhereTerminateFlagEquals(0);
		// findWhereRegisteredFlagEquals(0);
	}

	/**
	 * Method 'findAll'
	 * 
	 */
	public static void findAll()
	{
		try {
			MachinesDao _dao = getMachinesDao();
			Machines _result[] = _dao.findAll();
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereMachineIdEquals'
	 * 
	 * @param machineId
	 */
	public static void findWhereMachineIdEquals(long machineId)
	{
		try {
			MachinesDao _dao = getMachinesDao();
			Machines _result[] = _dao.findWhereMachineIdEquals(machineId);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereCustomerIdEquals'
	 * 
	 * @param customerId
	 */
	public static void findWhereCustomerIdEquals(long customerId)
	{
		try {
			MachinesDao _dao = getMachinesDao();
			Machines _result[] = _dao.findWhereCustomerIdEquals(customerId);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereViveIdEquals'
	 * 
	 * @param viveId
	 */
	public static void findWhereViveIdEquals(String viveId)
	{
		try {
			MachinesDao _dao = getMachinesDao();
			Machines _result[] = _dao.findWhereViveIdEquals(viveId);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereCpuSerialNoEquals'
	 * 
	 * @param cpuSerialNo
	 */
	public static void findWhereCpuSerialNoEquals(String cpuSerialNo)
	{
		try {
			MachinesDao _dao = getMachinesDao();
			Machines _result[] = _dao.findWhereCpuSerialNoEquals(cpuSerialNo);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereKeyDataEquals'
	 * 
	 * @param keyData
	 */
	public static void findWhereKeyDataEquals(String keyData)
	{
		try {
			MachinesDao _dao = getMachinesDao();
			Machines _result[] = _dao.findWhereKeyDataEquals(keyData);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereKeyTimestampEquals'
	 * 
	 * @param keyTimestamp
	 */
	public static void findWhereKeyTimestampEquals(long keyTimestamp)
	{
		try {
			MachinesDao _dao = getMachinesDao();
			Machines _result[] = _dao.findWhereKeyTimestampEquals(keyTimestamp);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereStolenFlagEquals'
	 * 
	 * @param stolenFlag
	 */
	public static void findWhereStolenFlagEquals(int stolenFlag)
	{
		try {
			MachinesDao _dao = getMachinesDao();
			Machines _result[] = _dao.findWhereStolenFlagEquals(stolenFlag);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereTerminateFlagEquals'
	 * 
	 * @param terminateFlag
	 */
	public static void findWhereTerminateFlagEquals(int terminateFlag)
	{
		try {
			MachinesDao _dao = getMachinesDao();
			Machines _result[] = _dao.findWhereTerminateFlagEquals(terminateFlag);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereRegisteredFlagEquals'
	 * 
	 * @param registeredFlag
	 */
	public static void findWhereRegisteredFlagEquals(int registeredFlag)
	{
		try {
			MachinesDao _dao = getMachinesDao();
			Machines _result[] = _dao.findWhereRegisteredFlagEquals(registeredFlag);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'getMachinesDao'
	 * 
	 * @return MachinesDao
	 */
	public static MachinesDao getMachinesDao()
	{
		return MachinesDaoFactory.create();
	}

	/**
	 * Method 'display'
	 * 
	 * @param dto
	 */
	public static void display(Machines dto)
	{
		StringBuffer buf = new StringBuffer();
		buf.append( dto.getMachineId() );
		buf.append( ", " );
		buf.append( dto.getCustomerId() );
		buf.append( ", " );
		buf.append( dto.getViveId() );
		buf.append( ", " );
		buf.append( dto.getCpuSerialNo() );
		buf.append( ", " );
		buf.append( dto.getKeyData() );
		buf.append( ", " );
		buf.append( dto.getKeyTimestamp() );
		buf.append( ", " );
		buf.append( dto.getStolenFlag() );
		buf.append( ", " );
		buf.append( dto.getTerminateFlag() );
		buf.append( ", " );
		buf.append( dto.getRegisteredFlag() );
		System.out.println( buf.toString() );
	}

}
