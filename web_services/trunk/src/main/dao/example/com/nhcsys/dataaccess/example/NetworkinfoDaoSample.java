/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.nhcsys.dataaccess.example;

import java.math.*;
import java.util.Date;
import java.util.Collection;
import com.nhcsys.dataaccess.dao.NetworkinfoDao;
import com.nhcsys.dataaccess.dto.Networkinfo;
import com.nhcsys.dataaccess.exceptions.NetworkinfoDaoException;
import com.nhcsys.dataaccess.factory.NetworkinfoDaoFactory;

public class NetworkinfoDaoSample
{
	/**
	 * Method 'main'
	 * 
	 * @param arg
	 * @throws Exception
	 */
	public static void main(String[] arg) throws Exception
	{
		// Uncomment one of the lines below to test the generated code
		
		// findAll();
		// findWhereNetworkinfoIdEquals(0);
		// findWhereCustomerIdEquals(0);
		// findWhereMachineIdEquals(0);
		// findWhereSsidEquals("");
		// findWherePassphraseEquals("");
		// findWhereWirelessinfotypeEquals("");
		// findWhereTimestampEquals(null);
	}

	/**
	 * Method 'findAll'
	 * 
	 */
	public static void findAll()
	{
		try {
			NetworkinfoDao _dao = getNetworkinfoDao();
			Networkinfo _result[] = _dao.findAll();
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereNetworkinfoIdEquals'
	 * 
	 * @param networkinfoId
	 */
	public static void findWhereNetworkinfoIdEquals(long networkinfoId)
	{
		try {
			NetworkinfoDao _dao = getNetworkinfoDao();
			Networkinfo _result[] = _dao.findWhereNetworkinfoIdEquals(networkinfoId);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereCustomerIdEquals'
	 * 
	 * @param customerId
	 */
	public static void findWhereCustomerIdEquals(long customerId)
	{
		try {
			NetworkinfoDao _dao = getNetworkinfoDao();
			Networkinfo _result[] = _dao.findWhereCustomerIdEquals(customerId);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereMachineIdEquals'
	 * 
	 * @param machineId
	 */
	public static void findWhereMachineIdEquals(long machineId)
	{
		try {
			NetworkinfoDao _dao = getNetworkinfoDao();
			Networkinfo _result[] = _dao.findWhereMachineIdEquals(machineId);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereSsidEquals'
	 * 
	 * @param ssid
	 */
	public static void findWhereSsidEquals(String ssid)
	{
		try {
			NetworkinfoDao _dao = getNetworkinfoDao();
			Networkinfo _result[] = _dao.findWhereSsidEquals(ssid);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWherePassphraseEquals'
	 * 
	 * @param passphrase
	 */
	public static void findWherePassphraseEquals(String passphrase)
	{
		try {
			NetworkinfoDao _dao = getNetworkinfoDao();
			Networkinfo _result[] = _dao.findWherePassphraseEquals(passphrase);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereWirelessinfotypeEquals'
	 * 
	 * @param wirelessinfotype
	 */
	public static void findWhereWirelessinfotypeEquals(String wirelessinfotype)
	{
		try {
			NetworkinfoDao _dao = getNetworkinfoDao();
			Networkinfo _result[] = _dao.findWhereWirelessinfotypeEquals(wirelessinfotype);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereTimestampEquals'
	 * 
	 * @param timestamp
	 */
	public static void findWhereTimestampEquals(Date timestamp)
	{
		try {
			NetworkinfoDao _dao = getNetworkinfoDao();
			Networkinfo _result[] = _dao.findWhereTimestampEquals(timestamp);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'getNetworkinfoDao'
	 * 
	 * @return NetworkinfoDao
	 */
	public static NetworkinfoDao getNetworkinfoDao()
	{
		return NetworkinfoDaoFactory.create();
	}

	/**
	 * Method 'display'
	 * 
	 * @param dto
	 */
	public static void display(Networkinfo dto)
	{
		StringBuffer buf = new StringBuffer();
		buf.append( dto.getNetworkinfoId() );
		buf.append( ", " );
		buf.append( dto.getCustomerId() );
		buf.append( ", " );
		buf.append( dto.getMachineId() );
		buf.append( ", " );
		buf.append( dto.getSsid() );
		buf.append( ", " );
		buf.append( dto.getPassphrase() );
		buf.append( ", " );
		buf.append( dto.getWirelessinfotype() );
		buf.append( ", " );
		buf.append( dto.getTimestamp() );
		System.out.println( buf.toString() );
	}

}
